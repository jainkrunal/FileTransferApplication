/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FTP;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.BindException;
import java.net.ConnectException;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.NoRouteToHostException;
import java.net.PortUnreachableException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.ProgressBar;
import javax.swing.JOptionPane;
import javax.swing.ProgressMonitorInputStream;

/**
 *
 * @author admin
 */
public class FTP extends javax.swing.JFrame {

    /**
     * Creates new form FTP
     */
    public FTP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SendFrame = new javax.swing.JFrame();
        Browse = new javax.swing.JButton();
        Server = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        HomeButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        ReceiveFrame = new javax.swing.JFrame();
        Client = new javax.swing.JButton();
        ipAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Browse1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        BrowseFrame = new javax.swing.JFrame();
        jFileChooser1 = new javax.swing.JFileChooser();
        RSaveFrame = new javax.swing.JFrame();
        jFileChooser2 = new javax.swing.JFileChooser();
        jTextField1 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        Send = new javax.swing.JButton();
        Receive = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        SendFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        SendFrame.setMinimumSize(new java.awt.Dimension(400, 400));
        SendFrame.setSize(new java.awt.Dimension(400, 400));
        SendFrame.getContentPane().setLayout(null);

        Browse.setText("Browse");
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });
        SendFrame.getContentPane().add(Browse);
        Browse.setBounds(150, 170, 80, 23);

        Server.setText("SEND");
        Server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServerActionPerformed(evt);
            }
        });
        SendFrame.getContentPane().add(Server);
        Server.setBounds(140, 270, 100, 50);

        jLabel13.setOpaque(true);
        SendFrame.getContentPane().add(jLabel13);
        jLabel13.setBounds(140, 230, 110, 23);

        jLabel1.setOpaque(true);
        SendFrame.getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 130, 260, 23);
        SendFrame.getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(120, 330, 146, 14);

        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FTP/Home(38 X 35).png"))); // NOI18N
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });
        SendFrame.getContentPane().add(HomeButton);
        HomeButton.setBounds(0, 0, 40, 35);

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("EZ-Transfer");
        SendFrame.getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 50, 270, 50);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Progress:");
        SendFrame.getContentPane().add(jLabel11);
        jLabel11.setBounds(20, 330, 100, 14);

        jButton1.setText("Fetch-IP");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        SendFrame.getContentPane().add(jButton1);
        jButton1.setBounds(60, 230, 73, 23);
        SendFrame.getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 90, 400, 310);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FTP/GUIpaperresized.jpg"))); // NOI18N
        SendFrame.getContentPane().add(jLabel10);
        jLabel10.setBounds(0, 0, 400, 400);

        ReceiveFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        ReceiveFrame.setMinimumSize(new java.awt.Dimension(400, 400));
        ReceiveFrame.setSize(new java.awt.Dimension(400, 400));
        ReceiveFrame.getContentPane().setLayout(null);

        Client.setText("RECEIVE");
        Client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientActionPerformed(evt);
            }
        });
        ReceiveFrame.getContentPane().add(Client);
        Client.setBounds(130, 270, 100, 40);

        ipAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipAddressActionPerformed(evt);
            }
        });
        ReceiveFrame.getContentPane().add(ipAddress);
        ipAddress.setBounds(120, 210, 129, 30);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Location: ");
        ReceiveFrame.getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 120, 80, 20);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FTP/Home(38 X 35).png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        ReceiveFrame.getContentPane().add(jButton2);
        jButton2.setBounds(0, 0, 40, 35);

        jLabel8.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("EZ-Transfer");
        ReceiveFrame.getContentPane().add(jLabel8);
        jLabel8.setBounds(80, 50, 270, 50);

        Browse1.setText("Browse");
        Browse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Browse1ActionPerformed(evt);
            }
        });
        ReceiveFrame.getContentPane().add(Browse1);
        Browse1.setBounds(150, 160, 80, 23);

        jLabel3.setOpaque(true);
        ReceiveFrame.getContentPane().add(jLabel3);
        jLabel3.setBounds(80, 120, 240, 23);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("IP Address:");
        ReceiveFrame.getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 210, 90, 30);

        jSeparator1.setForeground(new java.awt.Color(153, 153, 153));
        ReceiveFrame.getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 90, 400, 300);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FTP/GUIpaperresized.jpg"))); // NOI18N
        ReceiveFrame.getContentPane().add(jLabel9);
        jLabel9.setBounds(0, 0, 400, 400);

        BrowseFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        BrowseFrame.setMinimumSize(new java.awt.Dimension(500, 500));
        BrowseFrame.setSize(new java.awt.Dimension(500, 500));
        BrowseFrame.getContentPane().setLayout(new javax.swing.OverlayLayout(BrowseFrame.getContentPane()));

        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\Users\\admin\\Desktop"));
        jFileChooser1.setMinimumSize(new java.awt.Dimension(650, 450));
        jFileChooser1.setPreferredSize(new java.awt.Dimension(650, 450));
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        BrowseFrame.getContentPane().add(jFileChooser1);

        RSaveFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        RSaveFrame.setMinimumSize(new java.awt.Dimension(500, 500));
        RSaveFrame.setPreferredSize(new java.awt.Dimension(500, 500));
        RSaveFrame.setSize(new java.awt.Dimension(500, 500));
        RSaveFrame.getContentPane().setLayout(new javax.swing.OverlayLayout(RSaveFrame.getContentPane()));

        jFileChooser2.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser2.setCurrentDirectory(new java.io.File("C:\\Users\\admin\\Desktop"));
        jFileChooser2.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        jFileChooser2.setMinimumSize(new java.awt.Dimension(650, 450));
        jFileChooser2.setPreferredSize(new java.awt.Dimension(650, 450));
        jFileChooser2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser2ActionPerformed(evt);
            }
        });
        RSaveFrame.getContentPane().add(jFileChooser2);

        RSaveFrame.getAccessibleContext().setAccessibleDescription("");

        jTextField1.setText("jTextField1");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 400));
        setResizable(false);
        getContentPane().setLayout(null);

        Send.setText("Send");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });
        getContentPane().add(Send);
        Send.setBounds(80, 190, 90, 23);

        Receive.setText("Receive");
        Receive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceiveActionPerformed(evt);
            }
        });
        getContentPane().add(Receive);
        Receive.setBounds(80, 240, 90, 23);

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("EZ-Transfer");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(80, 50, 270, 50);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FTP/GUIpaperresized.jpg"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 400, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        // TODO add your handling code here:
        this.dispose();
        SendFrame.setVisible(true);
        SendFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_SendActionPerformed

    private void ReceiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceiveActionPerformed
        // TODO add your handling code here:
        this.dispose();
        ReceiveFrame.setVisible(true);
        ReceiveFrame.setLocationRelativeTo(null);

    }//GEN-LAST:event_ReceiveActionPerformed
String filename,path;
    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed
        // TODO add your handling code here:
        BrowseFrame.setVisible(true);
        BrowseFrame.setLocationRelativeTo(null);
      //  jLabel1.setText(jFileChooser1.getName());
    }//GEN-LAST:event_BrowseActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        path=jFileChooser1.getSelectedFile().getAbsolutePath();
        filename=jFileChooser1.getSelectedFile().getName();
        jLabel1.setText(path);
        BrowseFrame.setVisible(false);
          
    }//GEN-LAST:event_jFileChooser1ActionPerformed
int port;
    private void ServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServerActionPerformed
        // TODO add your handling code here:
    try{    
        port=6221;
        ServerSocket serverSocket = new ServerSocket(port);
        Socket socket = serverSocket.accept();

        System.out.println("Accepted connection : " + socket);
        File transferFile = new File (path);

        byte [] bytearray = new byte [(int)transferFile.length()];
        FileInputStream fin = new FileInputStream(transferFile);
        DataOutputStream dos=new DataOutputStream(socket.getOutputStream());
        dos.writeUTF(filename);	
	dos.flush();
        
     //   ByteArrayOutputStream out=new ByteArrayOutputStream((int)transferFile.length());
        
        OutputStream os = socket.getOutputStream();
        jLabel11.setText("Sending files...");
        System.out.println("Sending Files...");
        int bytesRead = -1;
        long totalBytesRead = 0;
        int percentCompleted = 0;
        long fileSize = transferFile.length();
//fin.read(bytearray);
        while ((bytesRead = fin.read(bytearray)) != -1) 
        {
            os.write(bytearray, 0 , bytesRead);
            totalBytesRead += bytesRead;
            System.out.println(fileSize +"  "+totalBytesRead);
            percentCompleted = (int)( totalBytesRead * 100 / fileSize);
            jProgressBar1.setValue(percentCompleted);
        }

//os.write(bytearray,0,bytearray.length);
    os.flush();
    socket.close();
    jLabel11.setText("Files Transfered...");
    JOptionPane.showMessageDialog(rootPane, "File Transfered......");
    SendFrame.setVisible(false);
    this.setVisible(true);
    System.out.println(fileSize +"  "+totalBytesRead+"File transfer complete"); 


    }
    catch(BindException e )
        {
            JOptionPane.showMessageDialog(rootPane, "This "+port+" Port no. is already in use........");
        }
       catch(SocketException e )
        {
            JOptionPane.showMessageDialog(rootPane, e+"........");
        } 
    catch(Exception e)
    {
        
    }
//System.out.println("File transfer complete"); 
    }//GEN-LAST:event_ServerActionPerformed
String rfilename="",rpath="";
    private void ClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientActionPerformed
        // TODO add your handling code here:
        try{
               int filesize=414748364;   //21474836
               int bytesRead;
               int currentTot = 0; 
  Socket socket = new Socket(ipAddress.getText(),6221);
   byte [] bytearray = new byte [filesize]; 
   InputStream is = socket.getInputStream(); 
   
     	DataInputStream dis = new DataInputStream(is);
	rfilename=dis.readUTF();
        rpath=((jFileChooser2.getSelectedFile().getAbsolutePath()).concat("\\")).concat(rfilename);
        
   FileOutputStream fos = new FileOutputStream(rpath);

   
   BufferedOutputStream bos = new BufferedOutputStream(fos); 
	bytesRead = is.read(bytearray,0,bytearray.length); 
	currentTot = bytesRead; 
	do { 
	bytesRead = is.read(bytearray, currentTot, (bytearray.length-currentTot)); 
	if(bytesRead >= 0) currentTot += bytesRead; } 
	while(bytesRead > -1);
	 bos.write(bytearray, 0 , currentTot);
	  bos.flush(); 
	  bos.close(); 
          JOptionPane.showMessageDialog(rootPane, "File Recieved......");
          ReceiveFrame.setVisible(false);
          this.setVisible(true);
          this.setLocationRelativeTo(null);
          System.out.println("Received!!");
	  socket.close();   
        }
        catch(PortUnreachableException e )
        {
            System.err.println(e);
            JOptionPane.showMessageDialog(rootPane, "Port No. is already in use......");
        }
        catch(SocketException e )
        {
            
            JOptionPane.showMessageDialog(rootPane, "No Sender Found......");
        }

                
        catch(Exception e)
        {
            System.out.println(e);
        }





    }//GEN-LAST:event_ClientActionPerformed

    private void ipAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipAddressActionPerformed

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        // TODO add your handling code here:
        SendFrame.setVisible(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_HomeButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ReceiveFrame.setVisible(false);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFileChooser2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser2ActionPerformed
        // TODO add your handling code here:
        RSaveFrame.setVisible(false);
        jLabel3.setText(jFileChooser2.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jFileChooser2ActionPerformed

    private void Browse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Browse1ActionPerformed
        // TODO add your handling code here:
        RSaveFrame.setVisible(true);
        RSaveFrame.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_Browse1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //InetAddress ia=new InetAddress();
//       InetAddress ipp=new Inet4Address();
        Socket s=null;
        try {
            s = new Socket("localhost",6221);
        } catch (IOException ex) {
            Logger.getLogger(FTP.class.getName()).log(Level.SEVERE, null, ex);
        }
       // String ip=toString(s.getInetAddress());
       InetAddress ipp=null;
        try {
 jLabel13.setText(ipp.getLocalHost().getHostAddress());
        } catch (UnknownHostException ex) {
            Logger.getLogger(FTP.class.getName()).log(Level.SEVERE, null, ex);
        }
       // jLabel12.setText(ipp.toString());
        //System.out.print(ipp.getHostAddress());
        //String sd="www.google.com";
        //InetAddress i=(InetAddress)(Object)sd;
        //System.out.print(i.getHostAddress());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FTP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FTP f=new FTP();
                f.setVisible(true);
                f.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Browse;
    private javax.swing.JButton Browse1;
    private javax.swing.JFrame BrowseFrame;
    private javax.swing.JButton Client;
    private javax.swing.JButton HomeButton;
    private javax.swing.JFrame RSaveFrame;
    private javax.swing.JButton Receive;
    private javax.swing.JFrame ReceiveFrame;
    private javax.swing.JButton Send;
    private javax.swing.JFrame SendFrame;
    private javax.swing.JButton Server;
    private javax.swing.JTextField ipAddress;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private String toString(InetAddress inetAddress) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

